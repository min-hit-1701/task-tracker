name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: ap-southeast-2

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests
      run: |
        pytest test_app.py -v

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script_stop: true
        script: |
          # Set timestamp for deployment
          echo "Deploying at $(date -u '+%Y-%m-%d %H:%M:%S')"
          
          # Ensure task-tracker directory exists and is up to date
          if [ ! -d "~/task-tracker" ]; then
            git clone https://github.com/min-hit-1701/task-tracker.git ~/task-tracker
          fi
          cd ~/task-tracker
          git fetch
          git reset --hard origin/main
          
          # Ensure Docker is running
          sudo systemctl start docker
          sudo systemctl enable docker
          
          # Stop and remove existing container
          docker stop task-tracker || true
          docker rm task-tracker || true
          
          # Build new image
          docker build -t task-tracker .
          
          # Run new container with environment variables
          docker run -d \
            --name task-tracker \
            -p 8080:8080 \
            -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            -e AWS_DEFAULT_REGION=${{ env.AWS_REGION }} \
            --restart unless-stopped \
            task-tracker
          
          echo "Deployment completed at $(date -u '+%Y-%m-%d %H:%M:%S')"